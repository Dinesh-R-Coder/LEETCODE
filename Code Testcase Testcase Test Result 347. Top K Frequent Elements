class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int[] frequent = new int[k] ;
        int index = 0 ;
     
        Map<Integer , Integer> map = new HashMap<>() ;
     //   ArrayList<Integer> list = new ArrayList<>() ;
        HashSet<Integer> set = new HashSet<>() ;
        for(int num : nums){
            map.put(num , map.getOrDefault(num , 0) + 1) ;
        }
       // for(Map.Entry<Integer , Integer> entry : map.entrySet()){
            //list.add(entry.getValue()) ;
           // System.out.print(entry.getValue()) ;
       // }
       
        //list.sort((a , b) -> b - a) ;
       /* for(int i = list.size() - 1 ; i >= 0 ; i--){
            int value = list.get(i) ;
          System.out.print(value) ;
            for(Map.Entry<Integer, Integer> entry : map.entrySet()){
                if(value == entry.getValue() && !set.contains(entry.getKey())){
                   key = entry.getKey() ;
                   set.add(key) ;
            } 
            }
            System.out.print(value+" "+key+" ") ;*/
            List<Map.Entry<Integer, Integer>> list = new ArrayList<>(map.entrySet());
            list.sort((a, b) -> b.getValue() - a.getValue());
            for(int i = 0 ; i < k ; i++){
            frequent[index] = list.get(i).getKey() ;
            index++ ;
            }
      return frequent ;
    }
}
