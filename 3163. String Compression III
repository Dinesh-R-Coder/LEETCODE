class Solution {
    public String compressedString(String word) {
       /* StringBuilder sb = new StringBuilder() ;
        Map<Character , Integer> hm = new HashMap<>() ;
        for(int i = 0 ; i < word.length() ; i++){
            hm.put(word.charAt(i) , hm.getOrDefault(word.charAt(i) , 0) + 1) ;
        }
        for(Map.Entry<Character , Integer> entry : hm.entrySet()){
            Character c = entry.getKey() ;
            int value = entry.getValue() ;
            while(value > 9){
                sb.append("9").append(c) ;
                value = value - 9  ;
            }
            if(value > 0){
                sb.append(value).append(c) ;
            }
        }
        return sb.toString() ;
    }
}*/

StringBuilder sb = new StringBuilder() ;
int count = 1 ;
for(int i = 1 ; i < word.length() ; i++){
    if(word.charAt(i) == word.charAt(i-1) && count < 9){
        count++ ;
    }
    else{
        sb.append(count).append(word.charAt(i-1));
        count = 1 ;
    }
}
sb.append(count).append(word.charAt(word.length() - 1));

return sb.toString() ;
    }
}
